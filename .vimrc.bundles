" Modeline and Notes {
" vim: set foldmarker={,} foldlevel=0 foldmethod=marker spell:
"
"                    __ _ _____              _
"         ___ _ __  / _/ |___ /      __   __(_)_ __ ___
"        / __| '_ \| |_| | |_ \ _____\ \ / /| | '_ ` _ \
"        \__ \ |_) |  _| |___) |_____|\ V / | | | | | | |
"        |___/ .__/|_| |_|____/        \_/  |_|_| |_| |_|
"            |_|
"
"   This is the personal .vimrc.bundles file of Steve Francia.
"   While much of it is beneficial for general use, I would
"   recommend picking out the parts you want and understand.
"
"   You can find me at http://spf13.com
" }

" Environment {
    " Basics {
        set nocompatible        " must be first line
        set background=dark     " Assume a dark background
    " }

    " Windows Compatible {
        " On Windows, also use '.vim' instead of 'vimfiles'; this makes synchronization
        " across (heterogeneous) systems easier.
        if has('win32') || has('win64')
          set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after
        endif
    " }
    "
    " Setup Bundle Support {
    " The next three lines ensure that the ~/.vim/bundle/ system works
        filetype off
        set rtp+=~/.vim/bundle/vundle
        call vundle#rc()
    " }

" }

" Bundles {
    " Deps
        if !exists("g:override_spf13_bundle_vundle")
            Bundle 'gmarik/vundle'
        endif
        if !exists("g:override_spf13_bundle_vim_addon_mw_utils")
            Bundle 'MarcWeber/vim-addon-mw-utils'
        endif
        if !exists("g:override_spf13_bundle_tlib_vim")
            Bundle 'tomtom/tlib_vim'
        endif
        if executable('ack-grep')
            let g:ackprg="ack-grep -H --nocolor --nogroup --column"
            if !exists("g:override_spf13_bundle_ack")
                Bundle 'mileszs/ack.vim'
            endif
        elseif executable('ack')
            if !exists("g:override_spf13_bundle_ack")
                Bundle 'mileszs/ack.vim'
            endif
        endif

    " Use local bundles if available {
        if filereadable(expand("~/.vimrc.bundles.local"))
            source ~/.vimrc.bundles.local
        endif
    " }
    " Use fork bundles if available {
        if filereadable(expand("~/.vimrc.bundles.fork"))
            source ~/.vimrc.bundles.fork
        endif
    " }

    " In your .vimrc.bundles.local file"
    " list only the plugin groups you will use
    if !exists('g:spf13_bundle_groups')
        let g:spf13_bundle_groups=['general', 'neocomplcache', 'programming', 'php', 'ruby', 'python', 'javascript', 'html', 'misc', 'scala']
    endif

    " To override all the included bundles, put
    " g:override_spf13_bundles = 1
    " in your .vimrc.bundles.local file"
    if !exists("g:override_spf13_bundles")

    " General
        if count(g:spf13_bundle_groups, 'general')
            if !exists("g:override_spf13_bundle_nerdtree")
                Bundle 'scrooloose/nerdtree'
            endif
            if !exists("g:override_spf13_bundle_vim_colors_solarized")
                Bundle 'altercation/vim-colors-solarized'
            endif
            if !exists("g:override_spf13_bundle_vim_colors")
                Bundle 'spf13/vim-colors'
            endif
            if !exists("g:override_spf13_bundle_vim_surround")
                Bundle 'tpope/vim-surround'
            endif
            if !exists("g:override_spf13_bundle_AutoClose")
                Bundle 'AutoClose'
            endif
            if !exists("g:override_spf13_bundle_ctrlp")
                Bundle 'kien/ctrlp.vim'
            endif
            if !exists("g:override_spf13_bundle_sessionman")
                Bundle 'vim-scripts/sessionman.vim'
            endif
            if !exists("g:override_spf13_bundle_matchit")
                Bundle 'matchit.zip'
            endif
            if !exists("g:override_spf13_bundle_vim_powerline")
                Bundle 'Lokaltog/vim-powerline'
            endif
            if !exists("g:override_spf13_bundle_vim_easymotion")
                Bundle 'Lokaltog/vim-easymotion'
            endif
            if !exists("g:override_spf13_bundle_csapprox")
                Bundle 'godlygeek/csapprox'
            endif
            if !exists("g:override_spf13_bundle_vim_nerdtree_tabs")
                Bundle 'jistr/vim-nerdtree-tabs'
            endif
            if !exists("g:override_spf13_bundle_vim_colorschemes")
                Bundle 'flazz/vim-colorschemes'
            endif
            if !exists("g:override_spf13_bundle_undotree")
                Bundle 'mbbill/undotree'
            endif
            if !exists("g:override_spf13_bundle_numbers")
                Bundle 'myusuf3/numbers.vim'
            endif
            if !exists("g:override_spf13_bundle_vim_indent_guides")
                Bundle 'nathanaelkane/vim-indent-guides'
            endif
            if !exists("g:override_spf13_bundle_restore_view")
                Bundle 'vim-scripts/restore_view.vim'
            endif
        endif

    " General Programming
        if count(g:spf13_bundle_groups, 'programming')
            " Pick one of the checksyntax, jslint, or syntastic
            if !exists("g:override_spf13_bundle_syntastic")
                Bundle 'scrooloose/syntastic'
            endif
            if !exists("g:override_spf13_bundle_vim_fugitive")
                Bundle 'tpope/vim-fugitive'
            endif
            if !exists("g:override_spf13_bundle_webapi_vim")
                Bundle 'mattn/webapi-vim'
            endif
            if !exists("g:override_spf13_bundle_gist_vim")
                Bundle 'mattn/gist-vim'
            endif
            if !exists("g:override_spf13_bundle_nerdcommenter")
                Bundle 'scrooloose/nerdcommenter'
            endif
            if !exists("g:override_spf13_bundle_tabular")
                Bundle 'godlygeek/tabular'
            endif
            if !exists("g:override_spf13_bundle_tagbar")
                if executable('ctags')
                    Bundle 'majutsushi/tagbar'
                endif
            endif
        endif

    " Snippets & AutoComplete
        if count(g:spf13_bundle_groups, 'snipmate')
            if !exists("g:override_spf13_bundle_vim_snipmate")
                Bundle 'garbas/vim-snipmate'
            endif
            if !exists("g:override_spf13_bundle_snipmate_snippets")
                Bundle 'honza/snipmate-snippets'
                if !exists("g:override_spf13_bundle_snipmate_support_functions")
                    " Source support_function.vim to support snipmate-snippets.
                    if filereadable(expand("~/.vim/bundle/snipmate-snippets/snippets/support_functions.vim"))
                        source ~/.vim/bundle/snipmate-snippets/snippets/support_functions.vim
                    endif
                endif
            endif
        elseif count(g:spf13_bundle_groups, 'neocomplcache')
            if !exists("g:override_spf13_bundle_neocomplcache")
                Bundle 'Shougo/neocomplcache'
            endif
            if !exists("g:override_spf13_bundle_neosnippet")
                Bundle 'Shougo/neosnippet'
            endif
            if !exists("g:override_spf13_bundle_snipmate_snippets")
                Bundle 'honza/snipmate-snippets'
            endif
        endif

    " PHP
        if count(g:spf13_bundle_groups, 'php')
            if !exists("g:override_spf13_bundle_PIV")
                Bundle 'spf13/PIV'
            endif
        endif

    " Python
        if count(g:spf13_bundle_groups, 'python')
            " Pick either python-mode or pyflakes & pydoc
            if !exists("g:override_spf13_bundle_python_mode")
                Bundle 'klen/python-mode'
            endif
            if !exists("g:override_spf13_bundle_python")
                Bundle 'python.vim'
            endif
            if !exists("g:override_spf13_bundle_python_match")
                Bundle 'python_match.vim'
            endif
            if !exists("g:override_spf13_bundle_pythoncomplete")
                Bundle 'pythoncomplete'
            endif
        endif

    " Javascript
        if count(g:spf13_bundle_groups, 'javascript')
            if !exists("g:override_spf13_bundle_vim_json")
                Bundle 'leshill/vim-json'
            endif
            if !exists("g:override_spf13_bundle_vim_less")
                Bundle 'groenewege/vim-less'
            endif
            if !exists("g:override_spf13_bundle_vim_javascript")
                Bundle 'pangloss/vim-javascript'
            endif
            if !exists("g:override_spf13_bundle_vim_jst")
                Bundle 'briancollins/vim-jst'
            endif
        endif

    " Java
        if count(g:spf13_bundle_groups, 'scala')
            if !exists("g:override_spf13_bundle_vim_scala")
                Bundle 'derekwyatt/vim-scala'
            endif
            if !exists("g:override_spf13_bundle_vim_sbt")
                Bundle 'derekwyatt/vim-sbt'
            endif
        endif

    " HTML
        if count(g:spf13_bundle_groups, 'html')
            if !exists("g:override_spf13_bundle_HTML_AutoCloseTag")
                Bundle 'amirh/HTML-AutoCloseTag'
            endif
            if !exists("g:override_spf13_bundle_vim_css3_syntax")
                Bundle 'hail2u/vim-css3-syntax'
            endif
        endif

    " Ruby
        if count(g:spf13_bundle_groups, 'ruby')
            if !exists("g:override_spf13_bundle_vim_rails")
                Bundle 'tpope/vim-rails'
            endif
            let g:rubycomplete_buffer_loading = 1
            "let g:rubycomplete_classes_in_global = 1
            "let g:rubycomplete_rails = 1
        endif

    " Misc
        if count(g:spf13_bundle_groups, 'misc')
            if !exists("g:override_spf13_bundle_vim_markdown")
                Bundle 'tpope/vim-markdown'
            endif
            if !exists("g:override_spf13_bundle_vim_preview")
                Bundle 'spf13/vim-preview'
            endif
            if !exists("g:override_spf13_bundle_vim_cucumber")
                Bundle 'tpope/vim-cucumber'
                if !exists("g:override_spf13_bundle_vim_cucumber_align_pipes")
                    Bundle 'quentindecock/vim-cucumber-align-pipes'
                endif
            endif
            if !exists("g:override_spf13_bundle_Puppet_Syntax_Highlighting")
                Bundle 'Puppet-Syntax-Highlighting'
            endif
        endif

    " Twig
        if count(g:spf13_bundle_groups, 'twig')
            if !exists("g:override_spf13_bundle_vim_twig")
                Bundle 'beyondwords/vim-twig'
            endif
        endif
    endif
" }

" General {
    " set autowrite                  " automatically write a file when leaving a modified buffer
    set shortmess+=filmnrxoOtT      " abbrev. of messages (avoids 'hit enter')
" }

